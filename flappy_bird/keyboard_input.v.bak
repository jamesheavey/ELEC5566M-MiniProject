module kbInput
(
	input clk, PS2_clk, PS2_data, 
	output direction, 
	output move, jump 
);

reg [7:0] code;
reg [10:0]	keyCode, previousCode;
integer count = 0;

always@(negedge PS2_clk)
begin
	keyCode[count] <= PS2_data;
	count <= count + 1;			
	if(count == 11) begin
		if(previousCode == 8'hF0) begin
			code <= keyCode[8:1];
		end
		previousCode <= keyCode[8:1];
		count <= 0;
	end
end
	
always@(code)
begin
	case (code):
	8'h1C:
		direction <= 0;
		move
	if(code == 8'h1D)
		direction = 5'b00010;
	else if(code == 8'h1C)
		direction = 5'b00100;
	else if(code == 8'h1B)
		direction = 5'b01000;
	else if(code == 8'h23)
		direction = 5'b10000;
	else if(code == 8'h5A)
		reset <= ~reset;
	else direction <= direction;
end	

endmodule